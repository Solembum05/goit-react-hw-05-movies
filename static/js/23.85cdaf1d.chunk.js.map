{"version":3,"file":"static/js/23.85cdaf1d.chunk.js","mappings":"uNA2CA,UAvCgB,WAEd,IAAMA,GAASC,EAAAA,EAAAA,MACfC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,EAAU,UAAAC,OAAaT,EAAOU,QAAO,YAC3CC,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAetB,OAbAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEQC,EAAAA,EAAAA,GAAOlB,GAAY,KAAD,EAAAa,EAAAE,EAAAI,KAAjCL,EAAID,EAAJC,KACRf,EAAWe,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEzBT,EAASS,EAAAM,GAAMC,SAAS,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,kBAE3B,kBAPe,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAQhBjB,GACF,GAAG,CAACR,IAGsB,IAAnBF,EAAQ4B,QACbC,EAAAA,EAAAA,MAAA,WAAAC,SAAA,CACa,OAAVvB,IACCsB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,8CAA4CvB,MAEjDwB,EAAAA,EAAAA,KAAA,MAAAD,SACG9B,EAAQgC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACjCP,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASK,MACbJ,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,MAFGF,EAGJ,UAKXH,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6CAEP,C,8FCpCaV,EAAM,eAAAT,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOuB,EAASC,GAAU,IAAAC,EAAA,OAAA1B,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACvBqB,EAAAA,EAAAA,IAAU,GAADrC,OAHtB,iCAIFA,OAAGkC,EAAO,aAAAlC,OALJ,oCAKuBA,OACjCmC,EAAU,UAAAnC,OAAamC,GAAe,GAAE,oBAE1C,KAAD,EAJa,OAARC,EAAQtB,EAAAI,KAAAJ,EAAAwB,OAAA,SAMPF,GAAQ,wBAAAtB,EAAAQ,OAAA,GAAAX,EAAA,KAChB,gBARkB4B,EAAAC,GAAA,OAAAhC,EAAAe,MAAA,KAAAC,UAAA,I","sources":["components/reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { getApi } from 'services/api';\n\nconst Reviews = () => {\n\n  const params = useParams();\n  const [reviews, setReviews] = useState([]);\n  const getReviews = `/movie/${params.movieId}/reviews`;\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getRequest = async () => {\n      try {\n        const { data } = await getApi(getReviews);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getRequest();\n  }, [getReviews]);\n\n\n  return reviews.length !== 0 ? (\n    <section>\n      {error !== null && (\n        <p>Oops, some error occured... Error message: {error}</p>\n      )}\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h4>Author: {author}</h4>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  ) : (\n    <p>We don't have any reviews for this movie.</p>\n  );\n}\n\nexport default Reviews\n\n","import axios from 'axios';\n\nconst API_KEY = 'ddf41d08627025b2d6783befee0c5c94';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getApi = async (apiTipe, dataSubmit) => {\n  const response = await axios.get(\n    `${URL}${apiTipe}?api_key=${API_KEY}${\n      dataSubmit ? `&query=${dataSubmit}` : ''\n    }&language=en-US`\n  );\n  // console.log(response);\n  return response;\n};"],"names":["params","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","getReviews","concat","movieId","_useState3","_useState4","error","setError","useEffect","getRequest","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getApi","data","_context","prev","next","getApi","sent","results","t0","message","stop","apply","arguments","length","_jsxs","children","_jsx","map","_ref2","id","author","content","apiTipe","dataSubmit","response","axios","abrupt","_x","_x2"],"sourceRoot":""}