{"version":3,"file":"static/js/967.bb7939d9.chunk.js","mappings":"iQAEaA,E,OAAQC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6C,SC+C/B,EA5Ca,WACX,IAAMC,GAASC,EAAAA,EAAAA,MACfC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAO,UAAAC,OAAab,EAAOc,QAAO,YAexC,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEQC,EAAAA,EAAAA,GAAOd,GAAS,KAAD,EAAAS,EAAAE,EAAAI,KAA9BL,EAAID,EAAJC,KACRf,EAAUe,EAAKM,MAAML,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAErBZ,EAASY,EAAAM,GAAMC,SAAU,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,kBAE5B,kBAPe,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAQhBjB,GACF,GAAG,CAACJ,KAIFsB,EAAAA,EAAAA,MAAA,WAAAC,SAAA,CACa,OAAVzB,IACCwB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,8CAA4CzB,MAEjD0B,EAAAA,EAAAA,KAAA,MAAAD,SACG7B,EAAO+B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAAY,OAC9CR,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACxC,EAAK,CACJ+C,IACED,EAAY,kCAAA7B,OAC0B6B,GAClC,mBAENE,IAAKJ,KAEPJ,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,KACLN,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYM,OAVRF,EAWJ,QAKf,C,8FC1Cab,EAAM,eAAAT,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOyB,EAASC,GAAU,IAAAC,EAAA,OAAA5B,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACvBuB,EAAAA,EAAAA,IAAU,GAADnC,OAHtB,iCAIFA,OAAGgC,EAAO,aAAAhC,OALJ,oCAKuBA,OACjCiC,EAAU,UAAAjC,OAAaiC,GAAe,GAAE,oBAE1C,KAAD,EAJa,OAARC,EAAQxB,EAAAI,KAAAJ,EAAA0B,OAAA,SAMPF,GAAQ,wBAAAxB,EAAAQ,OAAA,GAAAX,EAAA,KAChB,gBARkB8B,EAAAC,GAAA,OAAAlC,EAAAe,MAAA,KAAAC,UAAA,I","sources":["components/cast/cast.styled.js","components/cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Actor = styled.img`\n  width: 100px;\n  height: 150px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { getApi } from './../../services/api';\nimport { useParams } from \"react-router-dom\";\nimport { Actor } from \"./cast.styled\";\n\nconst Cast = () => {\n  const params = useParams();\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(null);\n  const getCast = `/movie/${params.movieId}/credits`;\n\n  useEffect(() => {\n    const getRequest = async () => {\n      try {\n        const { data } = await getApi(getCast);\n        setActors(data.cast);\n      } catch (error) {\n        setError(error.message);;\n      }\n    };\n    getRequest();\n  }, [getCast]);\n\n\n  return (\n    <section>\n      {error !== null && (\n        <p>Oops, some error occured... Error message: {error}</p>\n      )}\n      <ul>\n        {actors.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <Actor\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : 'Poster not found'\n              }\n              alt={name}\n            />\n            <h4>{name}</h4>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Cast\n","import axios from 'axios';\n\nconst API_KEY = 'ddf41d08627025b2d6783befee0c5c94';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getApi = async (apiTipe, dataSubmit) => {\n  const response = await axios.get(\n    `${URL}${apiTipe}?api_key=${API_KEY}${\n      dataSubmit ? `&query=${dataSubmit}` : ''\n    }&language=en-US`\n  );\n  // console.log(response);\n  return response;\n};"],"names":["Actor","styled","_templateObject","_taggedTemplateLiteral","params","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","error","setError","getCast","concat","movieId","useEffect","getRequest","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getApi","data","_context","prev","next","getApi","sent","cast","t0","message","stop","apply","arguments","_jsxs","children","_jsx","map","_ref2","id","name","character","profile_path","src","alt","apiTipe","dataSubmit","response","axios","abrupt","_x","_x2"],"sourceRoot":""}