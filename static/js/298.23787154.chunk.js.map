{"version":3,"file":"static/js/298.23787154.chunk.js","mappings":"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","sources":["components/movieInfo/MovieInfo.styled.js","components/movieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\n\n\nexport const Poster = styled.img`\n\n  width: 304px;\n  height: 400px;\n`;\n\nexport const Container = styled.section`\n  margin-top: 20px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const AdditionlInfo = styled.section`\n  padding: 20px;\n  box-shadow: inset rgb(73, 72, 40) 0px -1px 0px, rgb(73, 72, 40) 0px -1px 0px;\n`;\n\nexport const InfoLinks = styled(Link)`\n  display: block;\n  margin: 5px;\n`;","import React from 'react'\nimport { Container, Poster } from './MovieInfo.styled';\n\n\n\nconst MovieInfo = ({ movieInfo }) => {\n  \n  const {\n    poster_path,\n    title,\n    name,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = movieInfo;\n  \nconst poster = poster_path\n  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n  : 'Poster not found';\n  \n  const genresList = genres.map(genr=>genr.name).join(' ')\n\n\n  return (\n    <div>\n      <Container>\n        <div>\n          <Poster alt=\"poster\" src={poster} />\n        </div>\n        <div>\n          <h2>\n            {title || name} ({release_date?.slice(0, 4)})\n          </h2>\n          <p>User Score: {vote_average.toFixed(2)}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresList}</p>\n        </div>\n\n      </Container>\n    </div>\n  );\n}\n\nexport default MovieInfo","import MovieInfo from 'components/movieInfo/MovieInfo';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getApi } from 'services/api';\nimport {  InfoLinks,  AdditionlInfo,\n} from '../components/movieInfo/MovieInfo.styled';\n\nconst MovieDetails = () => {\n\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const params = useParams();\n\nconst getMovie = `/movie/${params.movieId}`;\n\n    useEffect(() => {\n      const getRequest = async () => {\n        try {\n          const { data } = await getApi(getMovie);\n          setMovieInfo(data);\n        } catch (error) {\n          setError(error.message);\n        }\n      };\n      getRequest();\n    }, [getMovie]);\n\n  const location = useLocation()\n  const backLink = useRef(location.state?.from ?? '/'); \n\n  \n\n  \n  \n return (\n   <div>\n     <Link to={backLink.current}>Go Back</Link>\n      {\n    error !== null && (\n      <p>\n        Oops, some error occured... Error message: {error}\n      </p>)}\n     {movieInfo && <MovieInfo movieInfo={movieInfo} />}\n     <AdditionlInfo>\n       Additionl Information\n       <ul>\n         <InfoLinks to=\"cast\">Cast</InfoLinks>\n         <InfoLinks to=\"reviews\">Reviews</InfoLinks>\n       </ul>\n     </AdditionlInfo>\n     <Outlet />\n   </div>\n );\n}\n\nexport default MovieDetails\n","import axios from 'axios';\n\nconst API_KEY = 'ddf41d08627025b2d6783befee0c5c94';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getApi = async (apiTipe, dataSubmit) => {\n  const response = await axios.get(\n    `${URL}${apiTipe}?api_key=${API_KEY}${\n      dataSubmit ? `&query=${dataSubmit}` : ''\n    }&language=en-US`\n  );\n  // console.log(response);\n  return response;\n};"],"names":["Poster","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","AdditionlInfo","_templateObject3","InfoLinks","Link","_templateObject4","_ref","movieInfo","poster_path","title","name","vote_average","overview","genres","release_date","poster","concat","genresList","map","genr","join","_jsx","children","_jsxs","alt","src","slice","toFixed","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovieInfo","_useState3","_useState4","error","setError","params","useParams","getMovie","movieId","useEffect","getRequest","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getApi","data","_context","prev","next","getApi","sent","t0","message","stop","apply","arguments","location","useLocation","backLink","useRef","state","from","to","current","MovieInfo","Outlet","apiTipe","dataSubmit","response","axios","abrupt","_x","_x2"],"sourceRoot":""}